
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      StickyPerson
 *  Source:     C:\plush2\OpenScrum\client_src\src\StickyPerson.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2013.02.10 19:08:58 MSK
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.rpc.events.ResultEvent;
import mx.rpc.http.mxml.HTTPService;
import mx.styles.*;
import spark.components.Group;
import spark.components.Label;
import spark.layouts.BasicLayout;



//  begin class def
public class StickyPerson
    extends spark.components.Group
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _StickyPerson_Label1 : spark.components.Label;

/**
 * @private
 **/
    public var _StickyPerson_Object1 : Object;

    [Bindable]
	/**
 * @private
 **/
    public var addperson : mx.rpc.http.mxml.HTTPService;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var background : uint;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var isDocked : Boolean;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var parentNoteID : String;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var person : String;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var serverURL : String;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function StickyPerson()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _StickyPerson_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_StickyPersonWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return StickyPerson[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.width = 75;
        this.height = 18;
        this.layout = _StickyPerson_BasicLayout1_c();
        this.mxmlContent = [_StickyPerson_Label1_i()];
        _StickyPerson_HTTPService1_i();
        _StickyPerson_uint1_i();
        _StickyPerson_Boolean1_i();
        _StickyPerson_String2_i();
        _StickyPerson_String1_i();
        _StickyPerson_String3_i();


        // events
        this.addEventListener("creationComplete", ___StickyPerson_Group1_creationComplete);










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 10 - 44

			import mx.core.DragSource;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.rpc.events.ResultEvent;

			protected function mouseDownHandler(event:MouseEvent):void
			{
				var ds:DragSource = new DragSource();
				ds.addData(person, 'personName');
				ds.addData(background, 'personBackground');
				ds.addData(isDocked, 'personDocked');
				ds.addData(this, 'personItself');
				
				DragManager.doDrag(this, ds, event);
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				serverURL = FlexGlobals.topLevelApplication.parameters["serverURL"] as String;
			}
			
			public function sendAddEvent():void
			{
				addperson.send();
			}


			protected function addperson_resultHandler(event:ResultEvent):void
			{
				var result:Object = addperson.lastResult;
			}

		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _StickyPerson_HTTPService1_i() : mx.rpc.http.mxml.HTTPService
{
	var temp : mx.rpc.http.mxml.HTTPService = new mx.rpc.http.mxml.HTTPService();
	temp.method = "POST";
	temp.request = _StickyPerson_Object1_i();
	temp.addEventListener("result", __addperson_result);
	temp.initialized(this, "addperson")
	addperson = temp;
	mx.binding.BindingManager.executeBindings(this, "addperson", addperson);
	return temp;
}

private function _StickyPerson_Object1_i() : Object
{
	var temp : Object = {id: null, name: null, color: null};
	_StickyPerson_Object1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_StickyPerson_Object1", _StickyPerson_Object1);
	return temp;
}

/**
 * @private
 **/
public function __addperson_result(event:mx.rpc.events.ResultEvent):void
{
	addperson_resultHandler(event)
}

private function _StickyPerson_uint1_i() : uint
{
	var temp : uint = 16777215;
	background = temp;
	mx.binding.BindingManager.executeBindings(this, "background", background);
	return temp;
}

private function _StickyPerson_Boolean1_i() : Boolean
{
	var temp : Boolean = false;
	isDocked = temp;
	mx.binding.BindingManager.executeBindings(this, "isDocked", isDocked);
	return temp;
}

private function _StickyPerson_String2_i() : String
{
	var temp : String = "NoID";
	parentNoteID = temp;
	mx.binding.BindingManager.executeBindings(this, "parentNoteID", parentNoteID);
	return temp;
}

private function _StickyPerson_String1_i() : String
{
	var temp : String = "Без имени";
	person = temp;
	mx.binding.BindingManager.executeBindings(this, "person", person);
	return temp;
}

private function _StickyPerson_String3_i() : String
{
	var temp : String = "http://localhost";
	serverURL = temp;
	mx.binding.BindingManager.executeBindings(this, "serverURL", serverURL);
	return temp;
}

private function _StickyPerson_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	return temp;
}

private function _StickyPerson_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.setStyle("backgroundAlpha", 0.58);
	temp.setStyle("verticalAlign", "middle");
	temp.setStyle("textAlign", "center");
	temp.addEventListener("mouseDown", ___StickyPerson_Label1_mouseDown);
	temp.id = "_StickyPerson_Label1";
	if (!temp.document) temp.document = this;
	_StickyPerson_Label1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_StickyPerson_Label1", _StickyPerson_Label1);
	return temp;
}

/**
 * @private
 **/
public function ___StickyPerson_Label1_mouseDown(event:flash.events.MouseEvent):void
{
	mouseDownHandler(event)
}

/**
 * @private
 **/
public function ___StickyPerson_Group1_creationComplete(event:mx.events.FlexEvent):void
{
	creationCompleteHandler(event)
}


    //  binding mgmt
    private function _StickyPerson_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (serverURL + '/addperson.php');
                return (result == undefined ? null : String(result));
            },
            null,
            "addperson.url"
            );

        result[1] = new mx.binding.Binding(this,
            null,
            null,
            "_StickyPerson_Object1.id"
            , "parentNoteID");

        result[2] = new mx.binding.Binding(this,
            null,
            null,
            "_StickyPerson_Object1.name"
            , "person");

        result[3] = new mx.binding.Binding(this,
            null,
            null,
            "_StickyPerson_Object1.color"
            , "background");

        result[4] = new mx.binding.Binding(this,
            null,
            null,
            "_StickyPerson_Label1.text"
            , "person");

        result[5] = new mx.binding.Binding(this,
            null,
            function(_sourceFunctionReturnValue:uint):void
            {
                _StickyPerson_Label1.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "_StickyPerson_Label1.backgroundColor"
            , "background");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (StickyPerson)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
