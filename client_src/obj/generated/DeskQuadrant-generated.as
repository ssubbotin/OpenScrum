
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      DeskQuadrant
 *  Source:     C:\plush2\OpenScrum\client_src\src\DeskQuadrant.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2013.02.10 19:09:37 MSK
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.controls.HRule;
import mx.controls.Spacer;
import mx.controls.VRule;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.events.DragEvent;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.states.State;
import mx.styles.*;
import spark.components.BorderContainer;
import spark.components.Group;
import spark.components.HGroup;
import spark.components.Label;
import spark.layouts.VerticalLayout;


[States("State1")]

//  begin class def
public class DeskQuadrant
    extends spark.components.Group
    implements mx.binding.IBindingClient, mx.core.IStateClient2
{

    //  instance variables
/**
 * @private
 **/
    public var _DeskQuadrant_BorderContainer2 : spark.components.BorderContainer;

/**
 * @private
 **/
    public var _DeskQuadrant_Group2 : spark.components.Group;

/**
 * @private
 **/
    public var _DeskQuadrant_HGroup1 : spark.components.HGroup;

/**
 * @private
 **/
    public var _DeskQuadrant_HGroup3 : spark.components.HGroup;

/**
 * @private
 **/
    public var _DeskQuadrant_Label1 : spark.components.Label;

/**
 * @private
 **/
    public var _DeskQuadrant_Label2 : spark.components.Label;

/**
 * @private
 **/
    public var _DeskQuadrant_Spacer1 : mx.controls.Spacer;

/**
 * @private
 **/
    public var _DeskQuadrant_Spacer2 : mx.controls.Spacer;

/**
 * @private
 **/
    public var _DeskQuadrant_VRule1 : mx.controls.VRule;

/**
 * @private
 **/
    public var _DeskQuadrant_VRule2 : mx.controls.VRule;

/**
 * @private
 **/
    public var _DeskQuadrant_VRule3 : mx.controls.VRule;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var leftCategory : String;

    [Bindable]
	/**
 * @private
 **/
    public var notesDock : spark.components.BorderContainer;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var quadId : int;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var showLeft : Boolean;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var showTop : Boolean;

    [Bindable]
	/**
 * @private
 **/
    public var sum : spark.components.Label;

    [Inspectable]
    [Bindable]
	/**
 * @private
 **/
    public var topCategory : String;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function DeskQuadrant()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _DeskQuadrant_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_DeskQuadrantWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return DeskQuadrant[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.layout = _DeskQuadrant_VerticalLayout1_c();
        this.mxmlContent = [_DeskQuadrant_Spacer1_i(), _DeskQuadrant_HGroup1_i(), _DeskQuadrant_HRule1_c(), _DeskQuadrant_HGroup2_c()];
        this.currentState = "State1";
        _DeskQuadrant_String2_i();
        _DeskQuadrant_int1_i();
        _DeskQuadrant_Boolean2_i();
        _DeskQuadrant_Boolean1_i();
        _DeskQuadrant_String1_i();


        // events
        this.addEventListener("creationComplete", ___DeskQuadrant_Group1_creationComplete);



		states = [
		  new State ({
		    name: "State1",
		    overrides: [
		    ]
		  })
		];







        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 12 - 121

			import flash.geom.Point;
			import flash.profiler.showRedrawRegions;
			
			import flashx.textLayout.formats.Float;
			
			import mx.containers.TitleWindow;
			import mx.controls.Image;
			import mx.core.DragSource;
			import mx.core.FlexGlobals;
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			//import org.osmf.image.ImageLoader;

			protected function dragEnterHandler(event:DragEvent):void
			{
				if(!FlexGlobals.topLevelApplication.read_only) {
					if (event.dragSource.hasFormat('noteColor')) {
						DragManager.acceptDragDrop(event.currentTarget as IUIComponent);
					}
					if (event.dragSource.hasFormat('noteItself')) {
						var note:StickyNote= event.dragSource.dataForFormat('noteItself') as StickyNote;
						var parentGroup:Group = note.parent as Group; 
						var quad:DeskQuadrant = parentGroup.parentDocument as DeskQuadrant;
						if(quad != this) {
							DragManager.acceptDragDrop(event.currentTarget as IUIComponent);
						}				
					}
				}
			}
			
			protected function dragDropHandler(event:DragEvent):void
			{			
				if (event.dragSource.hasFormat('noteColor')) {
					var sp:StickyNote = new StickyNote();
					sp.color = event.dragSource.dataForFormat('noteColor') as uint;
					sp.x = event.localX>600?600:event.localX;
					sp.y = event.localY>600?600:event.localY;
					sp.quadId = quadId;
					sp.serverURL = FlexGlobals.topLevelApplication.parameters["serverURL"];
					sp.sprintID = FlexGlobals.topLevelApplication.parameters["sprintID"];
					notesDock.addElement(sp);
					sp.sendCreationEvent();
				}
				if (event.dragSource.hasFormat('noteItself')) {
					var note:StickyNote= event.dragSource.dataForFormat('noteItself') as StickyNote;
					var parentGroup:Group = note.parent as Group;
					parentGroup.removeElement(note);
					note.x = event.localX>600?600:event.localX;
					note.y = event.localY>600?600:event.localY;
					notesDock.addElement(note);
					note.initmm(quadId);
				}
			}
			
			protected function calcComplexity():void {
				var complexity:Number = 0;
				var count:Number = 0;
				for(var i:int=0; i<notesDock.numElements; i++) {
					if(notesDock.getElementAt(i) is StickyNote) {
						var note:StickyNote = notesDock.getElementAt(i) as StickyNote;
						if(note.color != 0xb7fa57) {
							var days:String = note.usDays;
							days = days.replace(/,/g,".");
							complexity = complexity + parseFloat(days);
							count = count + 1;
						}
					}
				}
				sum.text = "tasks: " + count.toFixed(0) + ", sum: " + complexity.toFixed(1);
			}
			

			protected function bordercontainer1_mouseDownHandler(event:MouseEvent):void
			{
				calcComplexity();
			}

            [Embed(source="/assets/val.jpg")]
			private var bgVal:Class;
			
			[Embed(source="/assets/camuf.jpg")]
			private var bgCamuf:Class;
			
			private var dateTimer:Timer = new Timer(60*1000);
			
			protected function desk_creationCompleteHandler(event:FlexEvent):void
			{
				dateTimer.addEventListener(TimerEvent.TIMER, timeListener);
				dateTimer.start();
				timeListener(null);
			}
			
			private function timeListener(e:Event):void
			{
				var currentDate:Date = new Date();
				if((currentDate.month == 1) && (Math.abs(currentDate.date - 14) < 2)) {
					notesDock.setStyle("backgroundImage", bgVal);
				}
				if((currentDate.month == 1) && (Math.abs(currentDate.date - 23) < 2)) {
					notesDock.setStyle("backgroundImage", bgCamuf);
				}
			}

		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _DeskQuadrant_String2_i() : String
{
	var temp : String = "Имя категории не задано";
	leftCategory = temp;
	mx.binding.BindingManager.executeBindings(this, "leftCategory", leftCategory);
	return temp;
}

private function _DeskQuadrant_int1_i() : int
{
	var temp : int = 0;
	quadId = temp;
	mx.binding.BindingManager.executeBindings(this, "quadId", quadId);
	return temp;
}

private function _DeskQuadrant_Boolean2_i() : Boolean
{
	var temp : Boolean = false;
	showLeft = temp;
	mx.binding.BindingManager.executeBindings(this, "showLeft", showLeft);
	return temp;
}

private function _DeskQuadrant_Boolean1_i() : Boolean
{
	var temp : Boolean = false;
	showTop = temp;
	mx.binding.BindingManager.executeBindings(this, "showTop", showTop);
	return temp;
}

private function _DeskQuadrant_String1_i() : String
{
	var temp : String = "Имя категории не задано";
	topCategory = temp;
	mx.binding.BindingManager.executeBindings(this, "topCategory", topCategory);
	return temp;
}

private function _DeskQuadrant_VerticalLayout1_c() : spark.layouts.VerticalLayout
{
	var temp : spark.layouts.VerticalLayout = new spark.layouts.VerticalLayout();
	temp.gap = 0;
	return temp;
}

private function _DeskQuadrant_Spacer1_i() : mx.controls.Spacer
{
	var temp : mx.controls.Spacer = new mx.controls.Spacer();
	temp.alpha = 0.5;
	temp.id = "_DeskQuadrant_Spacer1";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_Spacer1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_Spacer1", _DeskQuadrant_Spacer1);
	return temp;
}

private function _DeskQuadrant_HGroup1_i() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.percentWidth = 100.0;
	temp.gap = 0;
	temp.mxmlContent = [_DeskQuadrant_Spacer2_i(), _DeskQuadrant_VRule1_i(), _DeskQuadrant_Label1_i(), _DeskQuadrant_VRule2_i()];
	temp.id = "_DeskQuadrant_HGroup1";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_HGroup1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_HGroup1", _DeskQuadrant_HGroup1);
	return temp;
}

private function _DeskQuadrant_Spacer2_i() : mx.controls.Spacer
{
	var temp : mx.controls.Spacer = new mx.controls.Spacer();
	temp.percentHeight = 100.0;
	temp.id = "_DeskQuadrant_Spacer2";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_Spacer2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_Spacer2", _DeskQuadrant_Spacer2);
	return temp;
}

private function _DeskQuadrant_VRule1_i() : mx.controls.VRule
{
	var temp : mx.controls.VRule = new mx.controls.VRule();
	temp.percentHeight = 100.0;
	temp.id = "_DeskQuadrant_VRule1";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_VRule1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_VRule1", _DeskQuadrant_VRule1);
	return temp;
}

private function _DeskQuadrant_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.setStyle("fontSize", 16);
	temp.setStyle("textAlign", "center");
	temp.setStyle("fontWeight", "bold");
	temp.setStyle("verticalAlign", "middle");
	temp.id = "_DeskQuadrant_Label1";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_Label1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_Label1", _DeskQuadrant_Label1);
	return temp;
}

private function _DeskQuadrant_VRule2_i() : mx.controls.VRule
{
	var temp : mx.controls.VRule = new mx.controls.VRule();
	temp.percentHeight = 100.0;
	temp.id = "_DeskQuadrant_VRule2";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_VRule2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_VRule2", _DeskQuadrant_VRule2);
	return temp;
}

private function _DeskQuadrant_HRule1_c() : mx.controls.HRule
{
	var temp : mx.controls.HRule = new mx.controls.HRule();
	temp.percentWidth = 100.0;
	temp.height = 1;
	if (!temp.document) temp.document = this;
	return temp;
}

private function _DeskQuadrant_HGroup2_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.percentHeight = 100.0;
	temp.gap = 0;
	temp.percentWidth = 100.0;
	temp.mxmlContent = [_DeskQuadrant_Group2_i(), _DeskQuadrant_VRule3_i(), _DeskQuadrant_BorderContainer1_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _DeskQuadrant_Group2_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.percentHeight = 100.0;
	temp.mxmlContent = [_DeskQuadrant_Label2_i()];
	temp.id = "_DeskQuadrant_Group2";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_Group2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_Group2", _DeskQuadrant_Group2);
	return temp;
}

private function _DeskQuadrant_Label2_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.rotation = -90;
	temp.y = 500;
	temp.setStyle("fontSize", 16);
	temp.setStyle("textAlign", "center");
	temp.setStyle("fontWeight", "bold");
	temp.setStyle("verticalAlign", "middle");
	temp.id = "_DeskQuadrant_Label2";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_Label2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_Label2", _DeskQuadrant_Label2);
	return temp;
}

private function _DeskQuadrant_VRule3_i() : mx.controls.VRule
{
	var temp : mx.controls.VRule = new mx.controls.VRule();
	temp.percentHeight = 100.0;
	temp.id = "_DeskQuadrant_VRule3";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_VRule3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_VRule3", _DeskQuadrant_VRule3);
	return temp;
}

private function _DeskQuadrant_BorderContainer1_i() : spark.components.BorderContainer
{
	var temp : spark.components.BorderContainer = new spark.components.BorderContainer();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_DeskQuadrant_Array6_c);
	temp.setStyle("backgroundImageFillMode", "scale");
	temp.addEventListener("dragEnter", __notesDock_dragEnter);
	temp.addEventListener("dragDrop", __notesDock_dragDrop);
	temp.id = "notesDock";
	if (!temp.document) temp.document = this;
	notesDock = temp;
	mx.binding.BindingManager.executeBindings(this, "notesDock", notesDock);
	return temp;
}

private function _DeskQuadrant_Array6_c() : Array
{
	var temp : Array = [_DeskQuadrant_BorderContainer2_i()];
	return temp;
}

private function _DeskQuadrant_BorderContainer2_i() : spark.components.BorderContainer
{
	var temp : spark.components.BorderContainer = new spark.components.BorderContainer();
	temp.depth = 1;
	temp.left = 0;
	temp.height = 20;
	temp.bottom = 0;
	temp.right = 0;
	temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_DeskQuadrant_Array7_c);
	temp.setStyle("borderVisible", false);
	temp.setStyle("backgroundAlpha", 0.5);
	temp.addEventListener("mouseDown", ___DeskQuadrant_BorderContainer2_mouseDown);
	temp.id = "_DeskQuadrant_BorderContainer2";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_BorderContainer2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_BorderContainer2", _DeskQuadrant_BorderContainer2);
	return temp;
}

private function _DeskQuadrant_Array7_c() : Array
{
	var temp : Array = [_DeskQuadrant_HGroup3_i()];
	return temp;
}

private function _DeskQuadrant_HGroup3_i() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.height = 20;
	temp.bottom = 0;
	temp.x = 0;
	temp.horizontalAlign = "right";
	temp.mxmlContent = [_DeskQuadrant_Label3_i()];
	temp.setStyle("fontWeight", "normal");
	temp.id = "_DeskQuadrant_HGroup3";
	if (!temp.document) temp.document = this;
	_DeskQuadrant_HGroup3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DeskQuadrant_HGroup3", _DeskQuadrant_HGroup3);
	return temp;
}

private function _DeskQuadrant_Label3_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.text = "click me";
	temp.setStyle("verticalAlign", "top");
	temp.setStyle("paddingTop", 5);
	temp.setStyle("paddingRight", 5);
	temp.id = "sum";
	if (!temp.document) temp.document = this;
	sum = temp;
	mx.binding.BindingManager.executeBindings(this, "sum", sum);
	return temp;
}

/**
 * @private
 **/
public function ___DeskQuadrant_BorderContainer2_mouseDown(event:flash.events.MouseEvent):void
{
	bordercontainer1_mouseDownHandler(event)
}

/**
 * @private
 **/
public function __notesDock_dragEnter(event:mx.events.DragEvent):void
{
	dragEnterHandler(event)
}

/**
 * @private
 **/
public function __notesDock_dragDrop(event:mx.events.DragEvent):void
{
	dragDropHandler(event)
}

/**
 * @private
 **/
public function ___DeskQuadrant_Group1_creationComplete(event:mx.events.FlexEvent):void
{
	desk_creationCompleteHandler(event)
}


    //  binding mgmt
    private function _DeskQuadrant_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():Number
            {

                return (showLeft?800:799);
            },
            null,
            "this.width"
            );

        result[1] = new mx.binding.Binding(this,
            function():Number
            {

                return (showTop?820:819);
            },
            null,
            "this.height"
            );

        result[2] = new mx.binding.Binding(this,
            function():Number
            {

                return (showTop?20:0);
            },
            null,
            "_DeskQuadrant_Spacer1.height"
            );

        result[3] = new mx.binding.Binding(this,
            function():Number
            {

                return (showTop?50:0);
            },
            null,
            "_DeskQuadrant_HGroup1.height"
            );

        result[4] = new mx.binding.Binding(this,
            null,
            null,
            "_DeskQuadrant_HGroup1.visible"
            , "showTop");

        result[5] = new mx.binding.Binding(this,
            function():Number
            {

                return (showLeft?50:0);
            },
            null,
            "_DeskQuadrant_Spacer2.width"
            );

        result[6] = new mx.binding.Binding(this,
            function():Number
            {

                return (showTop?1:0);
            },
            null,
            "_DeskQuadrant_VRule1.width"
            );

        result[7] = new mx.binding.Binding(this,
            null,
            null,
            "_DeskQuadrant_Label1.text"
            , "topCategory");

        result[8] = new mx.binding.Binding(this,
            function():Number
            {

                return (showTop?1:0);
            },
            null,
            "_DeskQuadrant_VRule2.width"
            );

        result[9] = new mx.binding.Binding(this,
            null,
            null,
            "_DeskQuadrant_Group2.visible"
            , "showLeft");

        result[10] = new mx.binding.Binding(this,
            function():Number
            {

                return (showLeft?50:0);
            },
            null,
            "_DeskQuadrant_Group2.width"
            );

        result[11] = new mx.binding.Binding(this,
            null,
            null,
            "_DeskQuadrant_Label2.text"
            , "leftCategory");

        result[12] = new mx.binding.Binding(this,
            function():Number
            {

                return (showLeft?1:0);
            },
            null,
            "_DeskQuadrant_VRule3.width"
            );

        result[13] = new mx.binding.Binding(this,
            function():Number
            {

                return (notesDock.width);
            },
            null,
            "_DeskQuadrant_BorderContainer2.width"
            );

        result[14] = new mx.binding.Binding(this,
            function():Number
            {

                return (notesDock.width);
            },
            null,
            "_DeskQuadrant_HGroup3.width"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (DeskQuadrant)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
